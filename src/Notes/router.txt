import { useParams } from "react-router-dom";
import { useState } from "react";
import { useEffect } from "react";
import * as React from "react";
import Plant from "../components/Plant";

const GalleryItem = () => {
    const { id } = useParams()
    const display = true

    const defaultData = {
        plant_name: "",
        reactors: []
    }
    const [data, setData] = useState(defaultData)
F
    useEffect(() => {
        const getData = async () => {
            const raw = await fetch("https://nuclear.dacoder.io/reactors?apiKey=aff16bb6a30addb7")
            const jsonData = await raw.json()

            jsonData.reactors = await Promise.all(jsonData.reactors.map(async reactor => {
                if (reactor.id == { id }) {
                    console.log("reactor id is simliar")
                    const rawTempData = await fetch(`https://nuclear.dacoder.io/reactors/temperature/${id}?apiKey=aff16bb6a30addb7`)
                    const tempData = await rawTempData.json()

                    const rawCoolantData = await fetch(`https://nuclear.dacoder.io/reactors/coolant/${id}?apiKey=aff16bb6a30addb7`)
                    const coolantData = await rawCoolantData.json()

                    const rawFuelLevelData = await fetch(`https://nuclear.dacoder.io/reactors/fuel-level/${id}?apiKey=aff16bb6a30addb7`)
                    const fuelLevelData = await rawFuelLevelData.json()

                    const rawReactorStateData = await fetch(`https://nuclear.dacoder.io/reactors/reactor-state/${id}?apiKey=aff16bb6a30addb7`)
                    const reactorStateData = await rawReactorStateData.json()

                    const rawRodsData = await fetch(`https://nuclear.dacoder.io/reactors/rod-state/${id}?apiKey=aff16bb6a30addb7`)
                    const rodsData = await rawRodsData.json()

                    const rawOutputData = await fetch(`https://nuclear.dacoder.io/reactors/output/${id}?apiKey=aff16bb6a30addb7`)
                    const outputData = await rawOutputData.json()

                    return {
                        ...reactor,
                        temperature: tempData.temperature,
                        coolant: coolantData.coolant,
                        fuelLevel: fuelLevelData.fuel,
                        state: reactorStateData.state,
                        rodState: rodsData.control_rods,
                        output: outputData.output,
                    }
                } else {
                    console.log("reactor id is not similar")
                }
            }))
            setData(jsonData)
            // console.log("jsonData: ", jsonData)
            // console.log(data)
        }
        const dataIntervalTimer = setInterval(async () => {
            await getData()
        }, 250)

        return () => {
            clearInterval(dataIntervalTimer)
        }

    }, [])
    console.log(data)
    return (
        <div>
            <h1>Current in {id}</h1>
            {/* <div className="main-plants-container">
                <Plant
                    key={data.reactors.id}
                    name={data.reactors.name}
                    temperature={data.reactors.temperature}
                    coolant={data.reactors.coolant}
                    fuelLevel={data.reactors.fuelLevel}
                    state={data.reactors.state}
                    rodState={data.reactors.rodState}
                    output={data.reactors.output}
                    id={data.reactors.id}
                />
            </div> */}
        </div>

    )
}

// export default GalleryItem